{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport TasksContext from \"../../context/TasksContext\";\nimport AddTaskScreenView from \"../../views/add-task-screen/AddTaskScreenView\";\nimport { addTask } from \"../../utils/CommonFunctions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar AddTaskScreen = function AddTaskScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(TasksContext),\n      Tasks = _useContext.Tasks,\n      handleTasks = _useContext.handleTasks;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var handleTask = function handleTask(param) {\n    setTask(param);\n  };\n\n  var handleDate = function handleDate(param) {\n    setDate(param);\n  };\n\n  var currentAddTask = function currentAddTask() {\n    addTask(task, date, Tasks);\n  };\n\n  var onCancel = function onCancel() {\n    navigation.goBack();\n  };\n\n  console.log('Model task', task);\n  console.log('Model date', date);\n  console.log('Task', Tasks);\n  return _jsx(AddTaskScreenView, {\n    handleTask: handleTask,\n    handleDate: handleDate,\n    currentAddTask: currentAddTask,\n    onCancel: onCancel\n  });\n};\n\nexport default AddTaskScreen;","map":{"version":3,"sources":["C:/Users/NIKHIL/Desktop/Practice/TODO2/app/models/add-task-screen/AddTaskScreen.js"],"names":["React","useState","useContext","TasksContext","AddTaskScreenView","addTask","AddTaskScreen","navigation","Tasks","handleTasks","task","setTask","date","setDate","handleTask","param","handleDate","currentAddTask","onCancel","goBack","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,OAAOC,YAAP;AACA,OAAOC,iBAAP;AACA,SAASC,OAAT;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACxC,oBAA+BL,UAAU,CAACC,YAAD,CAAzC;AAAA,MAAQK,KAAR,eAAQA,KAAR;AAAA,MAAeC,WAAf,eAAeA,WAAf;;AAGA,kBAA0BR,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAQS,IAAR;AAAA,MAAcC,OAAd;;AACA,mBAA0BV,QAAQ,EAAlC;AAAA;AAAA,MAAQW,IAAR;AAAA,MAAcC,OAAd;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5BJ,IAAAA,OAAO,CAACI,KAAD,CAAP;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACD,KAAD,EAAW;AAC5BF,IAAAA,OAAO,CAACE,KAAD,CAAP;AACD,GAFD;;AAGA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BZ,IAAAA,OAAO,CAACK,IAAD,EAAOE,IAAP,EAAaJ,KAAb,CAAP;AACD,GAFD;;AAGA,MAAMU,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBX,IAAAA,UAAU,CAACY,MAAX;AACD,GAFD;;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BX,IAA1B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BT,IAA1B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBb,KAApB;AAEA,SACE,KAAC,iBAAD;AAIE,IAAA,UAAU,EAAEM,UAJd;AAKE,IAAA,UAAU,EAAEE,UALd;AAME,IAAA,cAAc,EAAEC,cANlB;AAQE,IAAA,QAAQ,EAAEC;AARZ,IADF;AAYD,CApCD;;AAsCA,eAAeZ,aAAf","sourcesContent":["import React, { useState, useContext } from 'react'\r\n\r\nimport TasksContext from '../../context/TasksContext';\r\nimport AddTaskScreenView from '../../views/add-task-screen/AddTaskScreenView';\r\nimport { addTask } from '../../utils/CommonFunctions';\r\n\r\nconst AddTaskScreen = ({ navigation }) => {\r\n  const { Tasks, handleTasks } = useContext(TasksContext);\r\n  // const { Tasks } = useContext(TasksContext);\r\n  // console.log('Task', Tasks);\r\n  const [ task, setTask ] = useState('');\r\n  const [ date, setDate ] = useState();\r\n  const handleTask = (param) => {\r\n    setTask(param);\r\n  }\r\n  // console.log('date', date)\r\n  const handleDate = (param) => {\r\n    setDate(param);\r\n  }\r\n  const currentAddTask = () => {\r\n    addTask(task, date, Tasks);\r\n  }\r\n  const onCancel = () => {\r\n    navigation.goBack();\r\n  }\r\n\r\n  console.log('Model task', task);\r\n  console.log('Model date', date);\r\n  console.log('Task', Tasks);\r\n\r\n  return (\r\n    <AddTaskScreenView\r\n      // Tasks={Tasks}\r\n      // task={task}\r\n      // date={date}\r\n      handleTask={handleTask}\r\n      handleDate={handleDate}\r\n      currentAddTask={currentAddTask}\r\n      // addTask={addTask}\r\n      onCancel={onCancel}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AddTaskScreen"]},"metadata":{},"sourceType":"module"}