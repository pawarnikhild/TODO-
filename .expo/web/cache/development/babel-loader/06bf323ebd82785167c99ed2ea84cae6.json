{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ColorContext from \"../context/ColorContext\";\nimport TasksContext from \"../context/TasksContext\";\nimport PendingScreen from \"../models/pending-screen/PendingScreen\";\nimport CompleteScreen from \"../models/completed-screen/CompletedScreen\";\nimport SplashScreen from \"../models/splash-screen/SplashScreen\";\nimport MainTabNavigation from \"./MainTabNavigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar MainStackNavigation = function MainStackNavigation() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Tasks = _useState2[0],\n      setTasks = _useState2[1];\n\n  var handleTasks = function handleTasks(param) {\n    setTasks(param);\n  };\n\n  var _useState3 = useState('NoColor'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      colorMode = _useState4[0],\n      setColorMode = _useState4[1];\n\n  var handleColorMode = function handleColorMode(param) {\n    setColorMode(param);\n  };\n\n  return _jsx(ColorContext.Provider, {\n    value: {\n      colorMode: colorMode,\n      handleColorMode: handleColorMode\n    },\n    children: _jsx(TasksContext.Provider, {\n      value: {\n        Tasks: Tasks,\n        handleTasks: handleTasks\n      },\n      children: _jsx(NavigationContainer, {\n        children: _jsx(Stack.Navigator, {\n          screenOptions: {\n            headerShown: false\n          },\n          children: _jsx(Stack.Screen, {\n            name: \"MainTab\",\n            component: MainTabNavigation\n          })\n        })\n      })\n    })\n  });\n};\n\nexport default MainStackNavigation;","map":{"version":3,"sources":["C:/Users/NIKHIL/Desktop/Practice/TODO2/app/routes/MainStackNavigation.js"],"names":["React","useState","NavigationContainer","createStackNavigator","ColorContext","TasksContext","PendingScreen","CompleteScreen","SplashScreen","MainTabNavigation","Stack","MainStackNavigation","Tasks","setTasks","handleTasks","param","colorMode","setColorMode","handleColorMode","headerShown"],"mappings":";AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAGA,OAAOC,YAAP;AAEA,OAAOC,YAAP;AACA,OAAOC,aAAP;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;AACA,OAAOC,iBAAP;;AAEA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;;AAEA,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,kBAA4BV,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAQW,KAAR;AAAA,MAAeC,QAAf;;AAEA,MAAMC,WAAW,GAAI,SAAfA,WAAe,CAACC,KAAD,EAAW;AAC9BF,IAAAA,QAAQ,CAACE,KAAD,CAAR;AACD,GAFD;;AAGA,mBAAoCd,QAAQ,CAAC,SAAD,CAA5C;AAAA;AAAA,MAAQe,SAAR;AAAA,MAAmBC,YAAnB;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAEH,KAAF,EAAa;AACnCE,IAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,GAFD;;AAIA,SACE,KAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAATA,SAAD;AAAYE,MAAAA,eAAe,EAAfA;AAAZ,KAA9B;AAAA,cACA,KAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE;AAACN,QAAAA,KAAK,EAALA,KAAD;AAAQE,QAAAA,WAAW,EAAXA;AAAR,OAA9B;AAAA,gBACE,KAAC,mBAAD;AAAA,kBACE,KAAC,KAAD,CAAO,SAAP;AAAiB,UAAA,aAAa,EAAE;AAACK,YAAAA,WAAW,EAAE;AAAd,WAAhC;AAAA,oBAGE,KAAC,KAAD,CAAO,MAAP;AAAc,YAAA,IAAI,EAAC,SAAnB;AAA6B,YAAA,SAAS,EAAEV;AAAxC;AAHF;AADF;AADF;AADA,IADF;AAaD,CAxBD;;AA0BA,eAAeE,mBAAf","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { useState } from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n// import 'react-native-gesture-handler';\r\n\r\nimport ColorContext from '../context/ColorContext';\r\n// import TasksContext from '../context/TasksContext';\r\nimport TasksContext from '../context/TasksContext';\r\nimport PendingScreen from '../models/pending-screen/PendingScreen';\r\nimport CompleteScreen from '../models/completed-screen/CompletedScreen';\r\nimport SplashScreen from '../models/splash-screen/SplashScreen';\r\nimport MainTabNavigation from './MainTabNavigation';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst MainStackNavigation = () => {\r\n  const [ Tasks, setTasks ] = useState([]);\r\n\r\n  const handleTasks =  (param) => {\r\n    setTasks(param);\r\n  }\r\n  const [ colorMode, setColorMode ] = useState('NoColor');\r\n  const handleColorMode = ( param ) => {\r\n    setColorMode(param);\r\n  }\r\n  \r\n  return (\r\n    <ColorContext.Provider value={{colorMode, handleColorMode}}>\r\n    <TasksContext.Provider value={{Tasks, handleTasks}}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator screenOptions={{headerShown: false}}>\r\n          {/* <Stack.Screen name='Splash' component={SplashScreen} /> */}\r\n          {/* <Stack.Screen name='Login' component={CompleteScreen} /> */}\r\n          <Stack.Screen name='MainTab' component={MainTabNavigation} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </TasksContext.Provider>\r\n    </ColorContext.Provider>\r\n  )\r\n}\r\n\r\nexport default MainStackNavigation"]},"metadata":{},"sourceType":"module"}