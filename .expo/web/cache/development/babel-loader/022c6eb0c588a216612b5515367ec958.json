{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { AppColor, FontFamily, FontSize } from \"../utils/StyleConstants\";\nimport { Icon } from \"react-native-elements\";\nimport { PendingStackFunction, CompletedStackFunction, OverdueStackFunction } from \"./SubStackNavigation\";\nimport PendingScreen from \"../models/pending-screen/PendingScreen\";\nimport CompletedScreen from \"../models/completed-screen/CompletedScreen\";\nimport OverdueScreen from \"../models/overdue-screen/OverdueScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar MainTabNavigation = function MainTabNavigation() {\n  var Tab = createMaterialTopTabNavigator();\n  return _jsx(_Fragment, {\n    children: _jsxs(Tab.Navigator, {\n      tabBarPosition: \"bottom\",\n      screenOptions: {\n        tabBarShowLabel: false,\n        tabBarStyle: styles.tabBar,\n        tabBarIconStyle: styles.tabBarIcon,\n        tabBarLabelStyle: styles.tabBarLabel,\n        tabBarIndicatorStyle: {\n          color: 'red'\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Pending\",\n        component: PendingStackFunction,\n        options: {\n          title: \"Pending\",\n          tabBarIcon: function tabBarIcon(_ref) {\n            var focused = _ref.focused,\n                color = _ref.color,\n                size = _ref.size;\n            return _jsx(Icon, {\n              name: focused ? \"clock-time-eight\" : \"clock-time-four-outline\",\n              type: \"material-community\",\n              color: \"#f5d856\",\n              size: 36\n            });\n          },\n          unmountOnBlur: true\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Completed\",\n        component: CompletedStackFunction,\n        options: {\n          title: \"Completed\",\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            return _jsx(Icon, {\n              name: focused ? \"check-circle\" : \"check-circle-outline\",\n              type: \"material-community\",\n              color: \"green\",\n              size: 36\n            });\n          },\n          unmountOnBlur: true\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Overdue\",\n        component: OverdueStackFunction,\n        options: {\n          title: \"Overdue\",\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused,\n                color = _ref3.color,\n                size = _ref3.size;\n            return _jsx(Icon, {\n              name: focused ? \"clock-alert\" : \"clock-alert-outline\",\n              type: \"material-community\",\n              color: \"red\",\n              size: 36\n            });\n          },\n          unmountOnBlur: true\n        }\n      })]\n    })\n  });\n};\n\nexport default MainTabNavigation;\nvar styles = StyleSheet.create({\n  tabBar: {},\n  tabBarIcon: {\n    marginVertical: -4,\n    height: 36,\n    width: 36\n  },\n  tabBarLabel: {\n    fontSize: FontSize.Default\n  },\n  tabBarIndicator: {}\n});","map":{"version":3,"sources":["C:/Users/NIKHIL/Desktop/Practice/TODO2/app/routes/MainTabNavigation.js"],"names":["React","createBottomTabNavigator","createMaterialBottomTabNavigator","createMaterialTopTabNavigator","NavigationContainer","AppColor","FontFamily","FontSize","Icon","PendingStackFunction","CompletedStackFunction","OverdueStackFunction","PendingScreen","CompletedScreen","OverdueScreen","MainTabNavigation","Tab","tabBarShowLabel","tabBarStyle","styles","tabBar","tabBarIconStyle","tabBarIcon","tabBarLabelStyle","tabBarLabel","tabBarIndicatorStyle","color","title","focused","size","unmountOnBlur","StyleSheet","create","marginVertical","height","width","fontSize","Default","tabBarIndicator"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\r\nimport { createMaterialTopTabNavigator } from \"@react-navigation/material-top-tabs\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { AppColor, FontFamily, FontSize } from \"../utils/StyleConstants\";\r\nimport { Icon } from \"react-native-elements\";\r\n\r\nimport { PendingStackFunction, CompletedStackFunction, OverdueStackFunction } from './SubStackNavigation'\r\nimport PendingScreen from \"../models/pending-screen/PendingScreen\";\r\nimport CompletedScreen from \"../models/completed-screen/CompletedScreen\";\r\nimport OverdueScreen from \"../models/overdue-screen/OverdueScreen\";\r\n\r\nconst MainTabNavigation = () => {\r\n  // const Tab = createBottomTabNavigator();\r\n  // const Tab = createMaterialBottomTabNavigator();\r\n  const Tab = createMaterialTopTabNavigator();\r\n\r\n  return (\r\n    <>\r\n    {/* <NavigationContainer> */}\r\n      <Tab.Navigator\r\n        tabBarPosition=\"bottom\"\r\n        screenOptions={{\r\n          tabBarShowLabel: false,\r\n          tabBarStyle: styles.tabBar,\r\n          tabBarIconStyle: styles.tabBarIcon,\r\n          tabBarLabelStyle: styles.tabBarLabel,\r\n          // tabBarActiveTintColor: AppColor.primary,\r\n          // tabBarInactiveTintColor: AppColor.textDisabled,\r\n          tabBarIndicatorStyle: { color: 'red'},\r\n          // tabBarIndicatorStyleâ€‹: styles.tabBarIndicator,\r\n        }}\r\n      >\r\n        <Tab.Screen\r\n          name=\"Pending\"\r\n          component={PendingStackFunction}\r\n          options={{\r\n            title: \"Pending\",\r\n            // tabBarIcon: () => { <Icon name=\"clock\" type=\"material-community\" /> },\r\n            tabBarIcon: ({ focused, color, size }) => (\r\n              <Icon name={focused ? \"clock-time-eight\" : \"clock-time-four-outline\"} type=\"material-community\" color=\"#f5d856\" size={36} />\r\n            ),\r\n            // unmountOnBlur: true,\r\n            unmountOnBlur: true,\r\n          }}\r\n        />\r\n        <Tab.Screen \r\n          name=\"Completed\" \r\n          component={CompletedStackFunction}\r\n          options={{\r\n            title: \"Completed\",\r\n            // tabBarIcon: () => { <Icon name=\"clock\" type=\"material-community\" /> },\r\n            tabBarIcon: ({ focused, color, size }) => (\r\n              <Icon name={focused ? \"check-circle\" : \"check-circle-outline\"} type=\"material-community\" color=\"green\" size={36} />\r\n            ),\r\n            unmountOnBlur: true,\r\n          }}\r\n        />\r\n        <Tab.Screen \r\n          name=\"Overdue\"\r\n          component={OverdueStackFunction}\r\n          options={{\r\n            title: \"Overdue\",\r\n            // tabBarIcon: () => { <Icon name=\"clock\" type=\"material-community\" /> },\r\n            tabBarIcon: ({ focused, color, size }) => (\r\n              <Icon name={focused ? \"clock-alert\" : \"clock-alert-outline\"} type=\"material-community\" color=\"red\" size={36} />\r\n            ),\r\n            unmountOnBlur: true,\r\n          }}\r\n        />\r\n      </Tab.Navigator>\r\n    {/* </NavigationContainer> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainTabNavigation;\r\n\r\nconst styles = StyleSheet.create({\r\n  tabBar: {\r\n    // height: 52,\r\n    // backgroundColor: 'red'\r\n    \r\n  },\r\n  tabBarIcon: {\r\n    // marginTop: -10,\r\n    marginVertical: -4,\r\n    height: 36,\r\n    width: 36,\r\n  },\r\n  tabBarLabel: {\r\n    fontSize: FontSize.Default,\r\n    // marginVertical: -4,\r\n    // marginTop: -3\r\n  },\r\n  tabBarIndicator: {\r\n    // backgroundColor: 'red'\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}